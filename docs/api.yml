openapi: 3.0.0
info:
  title: Wallet API
  version: 1.2.0
  description: API Specification for a wallet application

tags:
  - name: accounts
    description: Operations related to accounts

paths:
  /accounts:
    get:
      tags:
        - accounts
      summary: Get the list of accounts
      responses:
        200:
          description: Successfully retrieved the list of accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListBody'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
    post:
      summary: create account.
      tags:
        - accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAccount'
      responses:
        200:
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateListAccountBody'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /account/{id}:
    get:
      tags:
        - accounts
      summary: Get account by account id.
      description: Get the account id.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved the  account by id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
    put:
      summary: Update an existing account
      tags:
        - accounts
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the account
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAccount'
      responses:
        200:
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateListAccountBody'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /transactions:
    get:
      tags:
        - Transactions
      summary: Get all transactions
      description: The returned transactions
      operationId: getTransactions
      responses:
        200:
          description: successfully returns list of all transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionBody'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
    post:
      tags:
        - Transactions
      summary: create transaction
      operationId: createTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTransaction'
      responses:
        200:
          description: successfully return transaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateListTransactionBody'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /transaction/{id}:
    get:
      tags:
        - Transactions
      summary: Get transaction by id.
      description: The returned transaction by id.
      operationId: getTransactionById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully return transaction by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionBody'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
    put:
      tags:
        - Transactions
      summary: Update a list of transactions
      operationId: UpdateTransactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTransaction'
      responses:
        200:
          description: successfully return transaction by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateListTransactionBody'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        amount:
          type: number
          format: double
        transactionDate:
          type: string
          format: date
        type:
          type: string
          enum:
            - 'debit'
            - 'credit'
    Currency:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
          enum:
            - 'Euro'
            - 'MGA'
    Balance:
      type: object
      properties:
        id:
          type: string
        value:
          type: number
          format: double
        date:
          type: string
          format: date
    Account:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - 'banque'
            - 'bet'
            - 'mobile'
        currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
        ballance:
          allOf:
            - $ref: '#/components/schemas/Balance'
    AccountList:
      type: array
      items:
        $ref: '#/components/schemas/Account'

    CreateOrUpdateAccount:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - 'banque'
            - 'bet'
            - 'mobile'
        currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
        ballance:
          allOf:
            - $ref: '#/components/schemas/Balance'
    CreateOrUpdateTransaction:
      type: object
      properties:
        label:
          type: string
        amount:
          type: number
          format: double
        transactionDate:
          type: string
          format: date
        type:
          type: string
          enum:
            - 'debit'
            - 'credit'
    Status:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    ResponseTemplate:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        body:
          type: object
    Successfully:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
      example:
        status:
          code: 200
        message: ok
        body: { }
    AccountListBody:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
        - properties:
            body:
              type: array
              items:
                $ref: '#/components/schemas/AccountList'
    CreateOrUpdateListAccountBody:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
        - properties:
            body:
              type: array
              items:
                $ref: '#/components/schemas/Account'
    TransactionBody:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
        - properties:
            body:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
    CreateOrUpdateListTransactionBody:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
        - properties:
            body:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
    BadRequestException:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
      example:
        status:
          code: 400
        message: bad request
        body: ''
    NotAuthorizedException:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
      example:
        status:
          code: 403
        message: Not authorized
        body:
    InternalServerException:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
      example:
        status:
          code: 500
        message: InternalServerException
        body:
  parameters:
    QueryPagination:
      name: queryPagination
      in: query
      description: Paramètres de pagination.
      required: false
      schema:
        type: object
        properties:
          page:
            type: integer
            default: 1
            description: Le numéro de page.
          page_size:
            type: integer
            default: 50
            description: Le nombre d'éléments par page
    PathPagination:
      name: queryPagination
      in: path
      description: pagination parametters.
      required: true
      schema:
        type: object
        properties:
          page:
            type: integer
            default: 1
            description: page number.
          page_size:
            type: integer
            default: 50
            description: Page size